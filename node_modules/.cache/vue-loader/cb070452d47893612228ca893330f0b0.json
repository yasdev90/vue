{"remainingRequest":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\src\\App.vue","mtime":1595230887868},{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\css-loader\\dist\\cjs.js","mtime":1595230480143},{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1595230489692},{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\postcss-loader\\src\\index.js","mtime":1595230484701},{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595230478595},{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\vue-loader\\lib\\index.js","mtime":1595230489691}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KYm9keXsNCiAgbWFyZ2luOjA7DQogIGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBUYWhvbWEsIEdlbmV2YSwgVmVyZGFuYSwgc2Fucy1zZXJpZjsNCn0NCg0KLnJpZ2h0ew0KICBmbG9hdDogcmlnaHQ7DQp9DQoubGVmdHsNCiAgZmxvYXQ6IGxlZnQ7DQp9DQouY29udGFpbmVyew0KICBwYWRkaW5nOiAyNHB4IDEycHg7DQp9DQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <Header />\r\n    <AddTodo @add-todo=\"addTodo\"/>\r\n    <div class=\"container\">\r\n    <div class=\"right\">\r\n      <TodosInfo :showOptions=\"showOptions\" @filter-changed=\"applyFilter\"/>\r\n    </div>   \r\n    <div class=\"left\">\r\n      <Paging :currentPage=\"pageIndex\" :totalPages=\"Math.ceil(filterdTodos.length/itemsPerPage)\" :todos=\"filterdTodos\"  @prev-page=\"prevPage\" @next-page=\"nextPage\" @page-size-changed=\"setPageSize\" />\r\n    </div> \r\n    <TodosList :todos=\"displayedTodos\" />       \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport Header from './components/header.vue'\r\nimport TodosList from './components/todos-list.vue'\r\nimport TodosInfo from './components/todos-info.vue'\r\nimport Paging from './components/pages-navigation.vue'\r\nimport AddTodo from './components/add-todo'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    Header,\r\n    TodosList,\r\n    Paging,\r\n    TodosInfo,\r\n    AddTodo\r\n  },\r\n  props:[\"pageSize\"],\r\n  data(){\r\n    return{\r\n      displayedTodos:[],\r\n      filterdTodos:[],\r\n      pageIndex : 1,\r\n      itemsPerPage:10,\r\n      lastItemIndex :0,\r\n     showOptions:[],\r\n     todosListData:[]\r\n    }\r\n  },\r\n  methods:{\r\n    addTodo(newTodo){\r\n      this.todosListData.push(newTodo)\r\n      //this.filterdTodos.push(newTodo)\r\n      this.displayTodos()\r\n    },\r\n    nextPage:function (){    \r\n      if(this.pageIndex<this.todosListData.length/this.itemsPerPage) {\r\n      this.pageIndex ++;\r\n      this.lastItemIndex += parseInt(this.itemsPerPage)\r\n      this.displayTodos()\r\n      }\r\n    },\r\n    prevPage:function (){\r\n      if(this.pageIndex>1){\r\n      this.pageIndex --;\r\n      this.lastItemIndex -= parseInt(this.itemsPerPage)\r\n       this.displayTodos()\r\n      }\r\n    }, \r\n    displayTodos: function(){\r\n      this.displayedTodos = this.filterdTodos.slice(this.lastItemIndex, parseInt(this.lastItemIndex) + parseInt(this.itemsPerPage))\r\n    },\r\n    setPageSize: function(pageSize){\r\n     this.itemsPerPage = pageSize\r\n     this.lastItemIndex = 0\r\n     this.pageIndex = 1\r\n     this.displayTodos()\r\n    },\r\n\r\n    applyFilter(filterValue){\r\n      if(filterValue.toUpperCase()== 'ALL'){\r\n      this.filterdTodos = this.todosListData\r\n      }\r\n      else if(filterValue.toUpperCase()== 'A'){\r\n      this.filterdTodos = this.todosListData.filter(todo=> !todo.completed)\r\n      }\r\n       else if(filterValue.toUpperCase()== 'C'){\r\n     this.filterdTodos = this.todosListData.filter(todo=> todo.completed)\r\n      }\r\n     \r\n      this.displayTodos()\r\n    },\r\n    getShowOptions(){\r\n      return this.showOptions = [\r\n         {\r\n             text:\"all\",\r\n             value : 'all'\r\n         },\r\n         {\r\n             text:\"active\",\r\n             value : 'a'\r\n         },\r\n          {\r\n             text:\"completed\",\r\n             value :'c'\r\n         },\r\n     ]\r\n    }\r\n  },\r\n  created(){\r\n    axios.get('https://jsonplaceholder.typicode.com/todos').then(res=>{\r\n      this.todosListData =  this.filterdTodos = res.data\r\n      this.displayTodos()\r\n      this.getShowOptions()\r\n      })        \r\n  }  \r\n}\r\n</script>\r\n\r\n<style>\r\nbody{\r\n  margin:0;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}\r\n\r\n.right{\r\n  float: right;\r\n}\r\n.left{\r\n  float: left;\r\n}\r\n.container{\r\n  padding: 24px 12px;\r\n}\r\n</style>\r\n"]}]}
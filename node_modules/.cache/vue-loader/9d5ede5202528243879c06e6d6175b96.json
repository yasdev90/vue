{"remainingRequest":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\src\\views\\Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\src\\views\\Home.vue","mtime":1595323458899},{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\css-loader\\dist\\cjs.js","mtime":1595230480143},{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1595230489692},{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\postcss-loader\\src\\index.js","mtime":1595230484701},{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595230478595},{"path":"C:\\Users\\user\\Desktop\\Yasser\\vue-todoList\\node_modules\\vue-loader\\lib\\index.js","mtime":1595230489691}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpib2R5ewogIG1hcmdpbjowOwogIGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBUYWhvbWEsIEdlbmV2YSwgVmVyZGFuYSwgc2Fucy1zZXJpZjsKfQoKLnJpZ2h0ewogIGZsb2F0OiByaWdodDsKfQoubGVmdHsKICBmbG9hdDogbGVmdDsKfQouY29udGFpbmVyewogIHBhZGRpbmc6IDI0cHggMTJweDsKfQoudmlzaWJsZXsKICBkaXNwbGF5OiBibG9jazsKfQouaGlkZGVuewogIGRpc3BsYXk6IG5vbmU7Cn0KaW5wdXRbdHlwZT0iY2hlY2tib3giXXsKICB3aWR0aDozMnB4OwogIGhlaWdodDogMzJweDsKICBtYXJnaW46MTJweDsKfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyLA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"app\">    \n    <AddTodo @add-todo=\"addTodo\"/>\n    <div class=\"container\">    \n      <div class=\"right\">\n        <TodosInfo :showOptions=\"showOptions\" @filter-changed=\"applyFilter\"/>\n      </div>   \n      <div :class=\"[pagesCount==0 || (currentPage == pagesCount && pagesCount == 1 )?'hidden':'visible']\">\n      <div class=\"left\">\n        <Paging :currentPage=\"pageIndex\" :totalPages=\"pagesCount\" :todos=\"filterdTodos\"  @prev-page=\"prevPage\" @next-page=\"nextPage\" @page-size-changed=\"setPageSize\" />\n      </div> \n      </div>\n      <TodosList :todos=\"displayedTodos\" @del-todo=\"deleteTodo\" @complete=\"applyFilter(localStorage.filterValue)\"/>\n       <div :class=\"[filterdTodos.length>0 ?'hidden':'visible']\" class=\"alert alert-primary\">\n      <p>horaay! no tasks you got!</p>  \n      </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport TodosList from '../components/todos-list.vue'\nimport TodosInfo from '../components/todos-info.vue'\nimport Paging from '../components/pages-navigation.vue'\nimport AddTodo from '../components/add-todo'\nimport staticJson from '../../db.json'\nimport {appConfigurations} from '../config'\nconst baseApiUrl = appConfigurations.baseApiUrl\n\nexport default {\n  name: 'Home',\n  components: {\n    TodosList,\n    Paging,\n    TodosInfo,\n    AddTodo\n  },\n  props:[\"pageSize\"],\n  data(){\n    return{\n      displayedTodos:[],\n      filterdTodos:[],\n      pageIndex : 1,\n      lastItemIndex :0,\n      pagesCount:0,\n     showOptions:[],\n     todosListData:[]\n    }\n  },\n  methods:{\n    addTodo(newTodo){\n      try{            \n        axios.post(baseApiUrl, newTodo).then(res=>{\n        this.filterdTodos.push(newTodo)\n        this.todosListData =  [...this.todosListData, res.data]\n        this.setPageSize(localStorage.itemsPerPage)\n        this.displayTodos()\n      })\n      }catch(e){\n        console.log(e)\n      }\n    },\n    nextPage:function (){    \n      if(this.pageIndex<this.todosListData.length/localStorage.itemsPerPage) {\n      this.pageIndex ++;\n      this.lastItemIndex += parseInt(localStorage.itemsPerPage)\n      this.displayTodos()\n      }\n    },\n    prevPage:function (){\n      if(this.pageIndex>1){\n      this.pageIndex --;\n      this.lastItemIndex -= parseInt(localStorage.itemsPerPage)\n       this.displayTodos()\n      }\n    }, \n    displayTodos: function(){\n      this.displayedTodos = this.filterdTodos.slice(this.lastItemIndex, parseInt(this.lastItemIndex) + parseInt(localStorage.itemsPerPage))\n    },\n    setPageSize: function(pageSize){\n      try{\n     localStorage.itemsPerPage = pageSize\n     this.lastItemIndex = 0\n     this.pageIndex = 1 \n     this.pagesCount = Math.ceil(this.todosListData.length/localStorage.itemsPerPage)\n     this.displayTodos()\n      }\n      catch(e){\n        console.log(e)\n      }\n    },\n\n    applyFilter(filterValue){   \n      try{ \n      localStorage.filterValue = filterValue\n      if(filterValue.toUpperCase()== 'ALL'){\n      this.filterdTodos = this.todosListData\n      }\n      else if(filterValue.toUpperCase()== 'A'){\n      this.filterdTodos = this.todosListData.filter(todo=> !todo.completed)\n      }\n       else if(filterValue.toUpperCase()== 'C'){\n     this.filterdTodos = this.todosListData.filter(todo=> todo.completed)\n     \n      }\n     this.lastItemIndex = 0\n     this.pageIndex =1\n     this.pagesCount = Math.ceil(this.filterdTodos.length/localStorage.itemsPerPage)\n      this.displayTodos()\n      }\n      catch(e){\n        console.log(e)\n      }\n    },\n    getShowOptions(){\n      return this.showOptions = [\n         {\n             text:\"all\",\n             value : 'all'\n         },\n         {\n             text:\"active\",\n             value : 'a'\n         },\n          {\n             text:\"completed\",\n             value :'c'\n         },\n     ]\n    },\n    deleteTodo(id){\n         try{                 \n      axios.delete(baseApiUrl+'/'+id).then(()=>{        \n        this.todosListData =  this.todosListData .filter(todo=> todo.id !== id)\n         this.filterdTodos =  this.todosListData .filter(todo=>todo.id !== id)\n        this.displayTodos()\n      })}\n      catch(e){\n        console.log(e)\n      }\n    }\n  },\n  beforeCreate(){    \n    try{\n    axios.get(baseApiUrl).then(res=>{\n      if(localStorage.filterValue == undefined) {\n          localStorage.filterValue='all'\n        }\n      if(localStorage.filterValue.toUpperCase()=='ALL'){        \n      this.todosListData =  this.filterdTodos = res.data\n      }\n      else\n      {\n        this.todosListData =  res.data\n        this.applyFilter(localStorage.filterValue)\n      }\n      if(!localStorage.itemsPerPage){\n        localStorage.itemsPerPage = 10\n      }\n      this.pagesCount = Math.ceil(this.todosListData.length/localStorage.itemsPerPage)\n      this.displayedTodos = this.todosListData\n      this.displayTodos()\n      this.getShowOptions()\n      })      \n      \n      \n      .catch(error=>{\n        if (!error.response) {\n           console.log ('Error: Network Error');\n           this.todosListData = this.filterdTodos =  staticJson.todos\n           this.displayTodos()\n        } else {\n            this.errorStatus = error.response.data.message;\n        }\n      })\n      }\n      catch(e){\n        console.log(e)\n      }\n  }  \n}\n</script>\n\n<style>\nbody{\n  margin:0;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.right{\n  float: right;\n}\n.left{\n  float: left;\n}\n.container{\n  padding: 24px 12px;\n}\n.visible{\n  display: block;\n}\n.hidden{\n  display: none;\n}\ninput[type=\"checkbox\"]{\n  width:32px;\n  height: 32px;\n  margin:12px;\n}\n</style>\n"]}]}